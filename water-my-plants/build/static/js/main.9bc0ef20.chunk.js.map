{"version":3,"sources":["components/PrivateRoute.js","utils/axiosWithAuth.js","components/Header.jsx","components/Styles/StyledComponents.js","components/Home.jsx","redux/actionTypes.js","redux/actions.js","components/Login.js","utils/waterplants.jpg","components/RegisterForm.jsx","components/PlantList.js","components/PlantPage.js","data.js","components/PlantDataList.jsx","images/plant.svg","components/UserPage.jsx","App.js","redux/reducers/plantsReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","window","localStorage","getItem","to","axiosWithAuth","token","axios","create","headers","Authorization","baseURL","HeaderStyle","styled","header","Header","StyledTextInput","div","StyledButton","button","StyledForm","h1","HomeStyle","main","Home","useEffect","get","then","res","console","log","className","LOG_ON","LOG_OFF","IS_FETCHING","USER_FETCHING_SUCCESS","PLANTS_FETCHING","PLANTS_FETCHING_SUCCESS","TOGGLE_MODAL","PLANT_FORM_INFO","setIsLoggedOn","type","isLoading","updateUserWithUsername","dispatch","username","user","data","find","payload","updateUsersPlants","id","userData","logoutUser","removeItem","toggleModal","quickAddPlantInfo","plant_species","LoginStyles","Login","useState","password","login","setLogin","history","useHistory","useDispatch","handleSubmit","e","preventDefault","post","setItem","push","catch","err","response","handleChange","target","name","value","onSubmit","htmlFor","placeholder","onChange","onClick","RegisterForm","phone","formState","setFormState","errors","setErrors","subBtn","setSubBtn","schema","yup","shape","trim","required","min","max","matches","isValid","valid","inputChange","event","checked","validate","validation","src","plantImg","alt","disabled","initialPlant","species","schedule","PlantList","plants","updatePlants","editing","setEditing","plantToEdit","setPlantToEdit","length","map","plant","plantList","editPlant","stopPropagation","delete","deletePlant","nickname","put","PlantPage","setPlantList","userId","useSelector","state","plantData","common_name","image_url","StyledPlantDataList","PlantDataList","List","ListData","setListData","useMemo","filter","_","i","style","width","height","Pagination","PaginationItem","PaginationLink","first","href","previous","next","last","UserPageStyle","NavPanelStyle","nav","PlantModal","quickAddSpecies","plantModalInfo","days","newPlant","setNewPlant","isOpen","plantModalIsOpen","changeHandler","h2oFrequency","addPlant","Modal","toggle","ModalHeader","ModalBody","Label","for","Form","Control","as","custom","ModalFooter","Button","color","UserPanel","slice","toUpperCase","plantIcon","UserPage","userIsNotNull","activeTab","setActiveTab","modalIsOpen","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","App","isLoggedOn","isLoggedIn","exact","path","initialState","plantReducer","action","userReducer","allReducers","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9bc0ef20.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (window.localStorage.getItem('token')) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n  const token = window.localStorage.getItem('token');\n\n  return axios.create({\n    headers: {\n      Authorization: token,\n    },\n    baseURL: 'https://plant-tender.herokuapp.com/',\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst HeaderStyle = styled.header`\n  color: #000;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  h1 {\n    font-family: 'Merienda', cursive;\n    font-size: 80px;\n    color: darkorange;\n    text-shadow: 0 0 0.1em black;\n  }\n`;\n\nfunction Header() {\n  return (\n    <HeaderStyle>\n      <h1>\n        <Link to=\"/\">Water My Plant</Link>\n      </h1>\n    </HeaderStyle>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst StyledTextInput = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  margin-bottom: 0.5em;\n\n  input,\n  select {\n    padding: 5px;\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n    border-radius: 5px;\n    border: 1px solid rgb(0, 0, 0);\n  }\n`;\n\nconst StyledButton = styled.button`\n  border: none;\n  background-color: #227744;\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 2px solid black;\n  border-radius: 5px;\n  color: white;\n  font-size: 25px;\n  max-width: 100%;\n\n  :hover {\n    opacity: 80%;\n  }\n`;\n\nconst StyledForm = styled.div`\n  width: 100%;\n  form {\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    padding: 1.15em;\n    box-shadow: 0px 0px 5px 5px #010101aa;\n    background-color: white;\n    border-radius: 10px;\n    width: 30%;\n    margin: 0 35% 0 35%;\n    background: rgba(255, 165, 0, 0.73);\n    color: white;\n    font-family: 'Merienda', cursive;\n    text-shadow: 3px 3px 5px black;\n  }\n\n  img {\n    width: 250px;\n    border-radius: 50%;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  font-size: 3.2rem;\n  font-weight: bold;\n  text-align: center;\n  padding: 2rem;\n  :hover {\n    color: #90ee90;\n  }\n`;\n\nexport { StyledTextInput, StyledButton, StyledForm };\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport Header from './Header';\nimport { StyledButton } from './Styles/StyledComponents';\n\nconst HomeStyle = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // border: 3px solid black;\n  // background: rgba(255, 165, 0, 0.73);\n\n  .box-container {\n    width: 33rem;\n    min-height: 25rem;\n    box-shadow: 0 0 0.8rem 0.2rem rgba(0, 0, 0, 0.8);\n    border-radius: 5px;\n    position: relative;\n    z-index: 1;\n    background: inherit;\n    overflow: hidden;\n    padding: 1em;\n  }\n\n  .box-container:before {\n    content: '';\n    background: inherit;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    box-shadow: inset 0 0 0 200px rgba(255, 165, 0, 0.6);\n    backdrop-filter: blur(0.1em);\n    filter: blur(5px);\n  }\n\n  .box-container .inside {\n    padding-bottom: 2em;\n    height: 100%;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n\n    position: absolute;\n    top: 1.5rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  p,\n  button {\n    font-size: 20px;\n    font-weight: bold;\n    color: black;\n    text-shadow: 0px 1px 1px rgba(255, 255, 255, 1);\n    font-family: 'Merienda', cursive;\n  }\n\n  button {\n    color: white;\n    text-shadow: 0px 1px 1px rgba(0, 0, 0, 1);\n  }\n`;\n\nfunction Home() {\n  useEffect(() => {\n    if (window.localStorage.getItem('token') !== null) {\n      axiosWithAuth()\n        .get('/api/auth/users')\n        .then((res) => {\n          console.log(res);\n        });\n    }\n  }, []);\n  return (\n    <div className=\"homePage\">\n      <Header />\n      <HomeStyle>\n        <div className=\"box-container\">\n          <div className=\"inside\">\n            <p>\n              Can't remember when or how <br></br>often to water your plants?\n            </p>\n            <p>Become a member today of our exclusive App!</p>\n            <Link to=\"/join\">\n              <StyledButton>Join</StyledButton>\n            </Link>\n            <p>Already a Member?</p>\n            <div>\n              <Link to=\"/login\">\n                <StyledButton>Login</StyledButton>\n              </Link>\n              <Link to=\"/join\">\n                <StyledButton>Join</StyledButton>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </HomeStyle>\n    </div>\n  );\n}\n\nexport default Home;\n","export const LOG_ON = 'LOG_ON';\nexport const LOG_OFF = 'LOG_OFF';\nexport const IS_FETCHING = 'IS_FETCHING_USER';\nexport const USER_FETCHING_SUCCESS = 'FETCHING_SUCCESS_UPDATE_USER';\nexport const PLANTS_FETCHING = 'PLANTS_FETCHING';\nexport const PLANTS_FETCHING_SUCCESS = 'FETCHING_SUCCESS_UPDATE_PLANTS';\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\nexport const PLANT_FORM_INFO = 'PLANT_FORM_INFO';\n","import Axios from 'axios';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport {\n  LOG_ON,\n  IS_FETCHING,\n  USER_FETCHING_SUCCESS,\n  PLANTS_FETCHING_SUCCESS,\n  LOG_OFF,\n  TOGGLE_MODAL,\n  PLANT_FORM_INFO,\n} from './actionTypes';\n\nexport const setIsLoggedOn = () => ({\n  type: LOG_ON,\n});\nexport const setIsLoggedOff = () => ({\n  type: LOG_OFF,\n});\nexport const isLoading = () => ({\n  type: IS_FETCHING,\n});\nexport const setUserData = (userData) => ({\n  type: USER_FETCHING_SUCCESS,\n  payload: userData,\n});\nexport const setUsersPlants = (userData) => ({\n  type: PLANTS_FETCHING_SUCCESS,\n  payload: userData,\n});\nexport const updateUserWithUsername = (dispatch, username) => {\n  dispatch(isLoading());\n  axiosWithAuth()\n    .get('/api/users')\n    .then((res) => {\n      const user = res.data.find((user) => user.username === username);\n      if (user) dispatch(setUserData(user));\n    });\n};\nexport const updateUsersPlants = (dispatch, id) => {\n  dispatch(isLoading());\n  axiosWithAuth()\n    .get(`/api/users/${id}/plants`)\n    .then((res) => {\n      dispatch(setUsersPlants(res.data));\n    });\n};\nexport const logoutUser = (dispatch) => {\n  window.localStorage.removeItem('token');\n  dispatch(setIsLoggedOff());\n};\n\n// Modal Actions\n\nexport const toggleModal = () => ({\n  type: TOGGLE_MODAL,\n});\n\nexport const addPlant = (dispatch, id, plant) => {\n  dispatch(isLoading());\n  axiosWithAuth().post(`/api/users/${id}/plants`, {\n    nickname: plant.name,\n    species: plant.species,\n    h2oFrequency: plant.days,\n  });\n  updateUsersPlants(dispatch, id);\n};\n\nexport const quickAddPlantInfo = (plant_species) => ({\n  type: PLANT_FORM_INFO,\n  payload: plant_species,\n});\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nimport Header from './Header';\nimport {\n  StyledButton,\n  StyledForm,\n  StyledTextInput,\n} from './Styles/StyledComponents';\nimport styled from 'styled-components';\nimport { setIsLoggedOn, updateUserWithUsername } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nconst LoginStyles = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .loginForm {\n    flex-basis: 100%;\n  }\n`;\n\nconst Login = (props) => {\n  // make a post request to retrieve a token from the api\n  const [login, setLogin] = useState({\n    username: '',\n    password: '',\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axiosWithAuth()\n      .post('/api/auth/login', login)\n      .then((res) => {\n        dispatch(setIsLoggedOn());\n        window.localStorage.setItem('token', res.data.token);\n        updateUserWithUsername(dispatch, login.username);\n        history.push('/plants');\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  const handleChange = (e) => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"homePage\">\n      <Header />\n      <LoginStyles>\n        <StyledForm className=\"loginForm\">\n          <form onSubmit={handleSubmit}>\n            <h2>Log In</h2>\n            <StyledTextInput>\n              <label htmlFor=\"loginUsername\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                id=\"loginUsername\"\n                placeholder=\"Username\"\n                value={props.username}\n                onChange={handleChange}\n              />\n            </StyledTextInput>\n            <StyledTextInput>\n              <label htmlFor=\"loginPassword\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                id=\"loginPassword\"\n                placeholder=\"Password\"\n                value={props.password}\n                onChange={handleChange}\n              />\n            </StyledTextInput>\n            <StyledButton onClick={handleSubmit}>LOGIN</StyledButton>\n          </form>\n        </StyledForm>\n      </LoginStyles>\n    </div>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/waterplants.ea5c35a7.jpg\";","import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { StyledForm, StyledTextInput } from './Styles/StyledComponents';\nimport plantImg from '../utils/waterplants.jpg';\nimport Header from './Header';\nimport { useDispatch } from 'react-redux';\nimport { setIsLoggedOn, updateUserWithUsername } from '../redux/actions';\n\nexport default function RegisterForm() {\n  //states\n  const [formState, setFormState] = useState({\n    username: '',\n    phone: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    phone: '',\n    password: '',\n  });\n\n  const [subBtn, setSubBtn] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const schema = yup.object().shape({\n    username: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(4, 'Username must be at lease 4 characters long')\n      .max(20, 'Username cannot exceed 20 characters'),\n\n    phone: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n\n    password: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(6, 'Username must be at lease 6 characters long')\n      .max(12, 'Password cannot exceed 20 characters'),\n  });\n\n  const validation = (event) => {\n    yup\n      .reach(schema, event.target.name)\n      .validate(event.target.value)\n      .then(() => {\n        setErrors({ ...errors, [event.target.name]: '' });\n      })\n      .catch((err) => {\n        setErrors({ ...errors, [event.target.name]: err.errors[0] });\n      });\n  };\n\n  useEffect(() => {\n    schema.isValid(formState).then((valid) => {\n      setSubBtn(!valid);\n    });\n  }, [formState]);\n\n  const inputChange = (event) => {\n    const data = {\n      ...formState,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value,\n    };\n    validation(event);\n    setFormState(data);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    axiosWithAuth()\n      .post('https://plant-tender.herokuapp.com/api/auth/register', formState)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err.response));\n    axiosWithAuth()\n      .post('https://plant-tender.herokuapp.com/api/auth/login', {\n        username: formState.username,\n        password: formState.password,\n      })\n      .then((res) => {\n        window.localStorage.setItem('token', res.data.token);\n        dispatch(setIsLoggedOn());\n        updateUserWithUsername(dispatch, formState.username);\n        setFormState({\n          username: '',\n          phone: '',\n          password: '',\n        });\n        history.push('/plants');\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <section className=\"form-container\">\n        <StyledForm>\n          <form onSubmit={submitForm}>\n            <div>\n              <h1>Water My Plants</h1>\n              <img src={plantImg} alt=\"registerImage\" />\n            </div>\n            <div className=\"user-name\">\n              <h3>Enter your Username</h3>\n              <StyledTextInput>\n                <label htmlFor=\"name\">\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    id=\"username\"\n                    value={formState.username}\n                    onChange={inputChange}\n                  />\n                </label>\n              </StyledTextInput>\n              <p>{errors.username}</p>\n            </div>\n            <div className=\"user-number\">\n              <h3>Enter your Phonenumber</h3>\n              <StyledTextInput>\n                <label>\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"xxx-xxx-xxxx\"\n                    id=\"phone\"\n                    value={formState.phone}\n                    onChange={inputChange}\n                  />\n                </label>\n              </StyledTextInput>\n              <p>{errors.phone}</p>\n            </div>\n            <div className=\"user-password\">\n              <h3>Enter a Password</h3>\n              <StyledTextInput>\n                <label>\n                  <input\n                    type=\"text\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    id=\"password\"\n                    value={formState.password}\n                    onChange={inputChange}\n                  />\n                </label>\n              </StyledTextInput>\n              <p>{errors.password}</p>\n            </div>\n            <button disabled={subBtn} type=\"submitBtn\">\n              Register\n            </button>\n          </form>\n        </StyledForm>\n      </section>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\n\nconst initialPlant = {\n  name: 'test',\n  species: 'test',\n  schedule: 'test',\n};\n\nconst PlantList = ({ plants, updatePlants }) => {\n  console.log('This is plants', plants);\n  const [editing, setEditing] = useState(false);\n  const [plantToEdit, setPlantToEdit] = useState(initialPlant);\n  const history = useHistory();\n\n  const editPlant = (plant) => {\n    setEditing(true);\n    setPlantToEdit(plant.plantList);\n  };\n\n  const saveEdit = (e) => {\n    e.preventDefault();\n    axiosWithAuth()\n      .put(`/api/plants/${plantToEdit.id}`, plantToEdit)\n      .then((res) => {\n        console.log('This is saveEdit', res.data);\n        setEditing(false);\n        updatePlants([...plants, res.data]);\n        history.push('/plants/reload');\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  const deletePlant = (plant) => {\n    axiosWithAuth()\n      .delete(`/api/plants/${plant.id}`)\n      .then((res) => {\n        console.log('This is delete plant', res.data);\n        history.push('/plants/reload');\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  return (\n    <div className=\"plants-wrap\">\n      <button onClick={updatePlants}>Reload Plants</button>\n      <p>These are the Plants</p>\n      <ul>\n        {plants.length > 0 &&\n          plants.map((plant) => (\n            <li key={plant.nickname} onClick={() => editPlant(plant)}>\n              <span>\n                <span\n                  className=\"delete\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    deletePlant(plant);\n                  }}\n                >\n                  Plant Name: {plant.nickname}\n                </span>\n              </span>\n            </li>\n          ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit plant</legend>\n          <label>\n            plant name:\n            <input\n              onChange={(e) =>\n                setPlantToEdit({ ...plantToEdit, name: e.target.value })\n              }\n              value={plantToEdit.name}\n            />\n          </label>\n          <label>\n            species:\n            <input\n              onChange={(e) =>\n                setPlantToEdit({ ...plantToEdit, species: e.target.value })\n              }\n              value={plantToEdit.species}\n            />\n          </label>\n          <label>\n            schedule:\n            <input\n              onChange={(e) =>\n                setPlantToEdit({ ...plantToEdit, schedule: e.target.value })\n              }\n              value={plantToEdit.schedule}\n            />\n          </label>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default PlantList;\n","import React, { useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUsersPlants } from '../redux/actions';\nimport PlantList from './PlantList';\n\nconst PlantPage = () => {\n  const [plantList, setPlantList] = useState([]);\n  const userId = useSelector((state) => state.user.userData?.id);\n  const plants = useSelector((state) => state.plants.plantList);\n  const plantsLoading = useSelector((state) => state.plants.isLoading);\n  const dispatch = useDispatch();\n\n  const reloadPlants = () => {\n    if (userId) updateUsersPlants(dispatch, userId);\n    setPlantList(plants);\n  };\n\n  return (\n    <>\n      <PlantList plants={plantList} updatePlants={() => reloadPlants()} />\n    </>\n  );\n};\n\nexport default PlantPage;\n","const plantData = [\n  {\n    id: 1,\n    common_name: 'Aloe Vera',\n    image_url:\n      'https://www.houseplantsexpert.com/assets/images/aloe-vera-plant-1.jpg',\n  },\n  {\n    id: 2,\n    common_name: 'Spider Plant',\n    image_url:\n      'https://www.houseplantsexpert.com/image-files/spiderplant_2.jpg',\n  },\n  {\n    id: 3,\n    common_name: 'Peace Lily',\n    image_url: 'https://www.houseplantsexpert.com/image-files/peace-lily.jpg',\n  },\n];\n\nexport default plantData;\n","import React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport plantData from '../data';\nimport { StyledButton } from './Styles/StyledComponents';\nimport { useDispatch } from 'react-redux';\nimport { quickAddPlantInfo, toggleModal } from '../redux/actions';\n\nconst StyledPlantDataList = styled.div`\n  height: 100%;\n\n  .listContainer {\n    display: flex;\n    flex-direction: column;\n    align-item: center;\n    justify-content: space-around;\n    width: 100%;\n    height: 100%;\n\n    .plantListContainer {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-direction: column;\n\n      .listChild {\n        width: 100%;\n        padding: 1em;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        p {\n          font-size: 2rem;\n        }\n      }\n    }\n    nav.pagination {\n      margin: 0 auto;\n    }\n  }\n`;\n\nconst PlantDataList = () => {\n  return (\n    <StyledPlantDataList>\n      {/* Search Plants from data.js */}\n      <List />\n    </StyledPlantDataList>\n  );\n};\n\nexport default PlantDataList;\n\nconst List = () => {\n  const [ListData, setListData] = useState([]);\n  const [Pages, setPages] = useState([]);\n  const dispatch = useDispatch();\n\n  useMemo(() => {\n    setListData(plantData);\n  }, []);\n\n  return (\n    <div className=\"listContainer\">\n      <h2>Plant List</h2>\n      {/* container */}\n      <div className=\"plantListContainer\">\n        {ListData.filter((_, i) => i < 5).map((e, i) => (\n          <div className=\"listChild\">\n            <img\n              src={e.image_url}\n              style={{ width: '100px', height: '100px' }}\n              alt={e.common_name + '_pic'}\n            />\n            <p>{e.common_name}</p>\n            <StyledButton\n              onClick={() => {\n                dispatch(quickAddPlantInfo(e.common_name));\n                dispatch(toggleModal());\n              }}\n            >\n              Quick Add\n            </StyledButton>\n          </div>\n        ))}\n      </div>\n      {/* pagination */}\n      <Pagination className=\"pagination\">\n        <PaginationItem>\n          <PaginationLink first href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink previous href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">1</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">2</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">3</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">4</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">5</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink next href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink last href=\"#\" />\n        </PaginationItem>\n      </Pagination>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/plant.6adedc65.svg\";","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\nimport { Form } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\n\nimport {\n  addPlant,\n  logoutUser,\n  quickAddPlantInfo,\n  toggleModal,\n} from '../redux/actions';\nimport PlantPage from './PlantPage';\nimport PlantDataList from './PlantDataList';\nimport plantIcon from '../images/plant.svg';\nimport { StyledForm, StyledTextInput } from './Styles/StyledComponents';\n\nconst UserPageStyle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1em 2em;\n  height: 100vh;\n  width: 100vw;\n\n  .userDashboard {\n    background-color: #f0f0f0;\n    border-radius: 5px;\n    height: 95%;\n    flex: 1;\n    box-shadow: 0 0 5px black;\n\n    .nav-link {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst NavPanelStyle = styled.nav`\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  padding: 1em;\n  height: 95%;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 1em;\n  box-shadow: 0 0 5px black;\n\n  .user--icon {\n    padding: 1em;\n    margin-bottom: 5px;\n    box-shadow: 0 0 5px black;\n    border-radius: 50px;\n    background-color: #499e3c;\n    width: 60px;\n    height: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .user--logout-btn {\n    border: 0;\n    padding: 0.5em;\n    border-radius: 5px;\n    color: white;\n    background-color: #bc0003;\n    font-weight: 600;\n  }\n\n  .user--addPlant {\n    border: 1px solid black;\n    padding: 0.25em;\n\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    justify-content: space-evenly;\n\n    img {\n      height: 25px;\n    }\n\n    p {\n      margin: 0;\n      padding: 0;\n    }\n  }\n`;\n\nconst UserPage = () => {\n  const user = useSelector((state) => state.user.userData);\n  const userIsNotNull = useSelector((state) => state.user !== {});\n  const [activeTab, setActiveTab] = useState('1');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  console.log(user);\n\n  return (\n    <UserPageStyle>\n      {/* menu side bar */}\n      {userIsNotNull && (\n        <>\n          <PlantModal isOpen={modalIsOpen} dispatch={dispatch} />\n          <UserPanel\n            username={user.username}\n            dispatch={dispatch}\n            history={history}\n          />\n          <div className=\"userDashboard\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '1' })}\n                  onClick={() => {\n                    toggle('1');\n                  }}\n                >\n                  My Plants\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '2' })}\n                  onClick={() => {\n                    toggle('2');\n                  }}\n                >\n                  Plant List\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                <PlantPage />\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <PlantDataList />\n              </TabPane>\n            </TabContent>\n          </div>\n        </>\n      )}\n    </UserPageStyle>\n  );\n};\n\nconst PlantModal = ({ dispatch }) => {\n  const currentPlant = {\n    name: '',\n    species: '',\n    days: 1,\n  };\n\n  const quickAddSpecies = useSelector(\n    (state) => state.plants.plantModalInfo.species\n  );\n  const [newPlant, setNewPlant] = useState(currentPlant);\n  const userId = useSelector((state) => state.user.userData.id);\n  const isOpen = useSelector((state) => state.plants.plantModalIsOpen);\n\n  useEffect(() => {\n    setNewPlant({ ...newPlant, species: quickAddSpecies });\n  }, [quickAddSpecies]);\n\n  console.log(quickAddSpecies);\n\n  const changeHandler = (e) => {\n    setNewPlant({\n      ...newPlant,\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addPlant(dispatch, userId, newPlant);\n    dispatch(quickAddPlantInfo(''));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        toggle={() => dispatch(toggleModal())}\n        className=\"addPlantModal\"\n      >\n        <ModalHeader toggle={() => dispatch(toggleModal())}>\n          Add A Plant\n        </ModalHeader>\n        <ModalBody>\n          <StyledForm onSubmit={(e) => handleSubmit(e)}>\n            <StyledTextInput>\n              <Label for=\"name\">\n                Plant Name\n                <Form.Control\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  onChange={changeHandler}\n                  value={newPlant.name}\n                />\n              </Label>\n            </StyledTextInput>\n            <StyledTextInput>\n              <Label for=\"species\">\n                Plant Species\n                <Form.Control\n                  type=\"text\"\n                  id=\"species\"\n                  name=\"species\"\n                  onChange={changeHandler}\n                  value={newPlant.species}\n                />\n              </Label>\n            </StyledTextInput>\n            <StyledTextInput>\n              <Label for=\"species\">\n                Days to Water\n                <Form.Control\n                  as=\"select\"\n                  name=\"days\"\n                  onChange={changeHandler}\n                  value={newPlant.days}\n                  custom\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                  <option>6</option>\n                  <option>7</option>\n                </Form.Control>\n              </Label>\n            </StyledTextInput>\n          </StyledForm>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleSubmit}>\n            Add Plant\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nconst UserPanel = ({ username, dispatch, history }) => {\n  return (\n    <>\n      <NavPanelStyle>\n        <div className=\"user--wrapper\">\n          <div className=\"user--icon\">\n            {username && username.slice(0, 1).toUpperCase()}\n          </div>\n          <div className=\"user--username\">{username}</div>\n          <div\n            className=\"user--addPlant\"\n            onClick={(e) => dispatch(toggleModal())}\n          >\n            <img src={plantIcon} alt=\"\" />\n            <p>Add Plant</p>\n          </div>\n        </div>\n        <button\n          className=\"user--logout-btn\"\n          onClick={(e) => {\n            logoutUser(dispatch);\n            history.push('/');\n          }}\n        >\n          Logout\n        </button>\n      </NavPanelStyle>\n    </>\n  );\n};\n\nexport default UserPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport RegisterForm from './components/RegisterForm';\n\nimport './App.css';\nimport { useSelector } from 'react-redux';\nimport UserPage from './components/UserPage';\n\nfunction App() {\n  const isLoggedOn = useSelector((state) => state.user.isLoggedIn);\n  console.log(isLoggedOn);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <PrivateRoute exact path=\"/plants\" component={UserPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/join\" component={RegisterForm} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  PLANTS_FETCHING,\n  PLANTS_FETCHING_SUCCESS,\n  PLANT_FORM_INFO,\n  TOGGLE_MODAL,\n} from '../actionTypes';\n\nconst initialState = {\n  isLoading: false,\n  plantModalIsOpen: false,\n  plantList: {},\n  plantModalInfo: {\n    species: '',\n  },\n};\n\nfunction plantReducer(state = initialState, action) {\n  switch (action.type) {\n    case PLANTS_FETCHING:\n      return { ...state, isLoading: true };\n    case PLANTS_FETCHING_SUCCESS:\n      return { ...state, plantList: action.payload, isLoading: false };\n    case TOGGLE_MODAL:\n      return { ...state, plantModalIsOpen: !state.plantModalIsOpen };\n    case PLANT_FORM_INFO:\n      return { ...state, plantModalInfo: { species: action.payload } };\n    default:\n      return state;\n  }\n}\n\nexport default plantReducer;\n","import {\n  IS_FETCHING,\n  LOG_ON,\n  USER_FETCHING_SUCCESS,\n  LOG_OFF,\n} from '../actionTypes';\n\nconst initialState = {\n  isLoggedIn: window.localStorage.token !== null,\n  isLoading: false,\n  userData: {},\n};\n\nfunction userReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOG_ON:\n      return { ...state, isLoggedIn: true };\n    case LOG_OFF:\n      return { ...state, isLoggedIn: false };\n    case IS_FETCHING:\n      return { ...state, isLoading: true };\n    case USER_FETCHING_SUCCESS:\n      return { ...state, isLoading: false, userData: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport plantReducer from './plantsReducer';\nimport userReducer from './userReducer';\n\nconst allReducers = combineReducers({\n  user: userReducer,\n  plants: plantReducer,\n});\n\nexport default allReducers;\n","import { applyMiddleware, createStore } from 'redux';\nimport Thunk from 'redux-thunk';\nimport allReducers from '../reducers';\n\nconst store = createStore(allReducers, applyMiddleware(Thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}