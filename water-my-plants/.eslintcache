[{"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/index.js":"1","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/App.js":"2","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Login.js":"3","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PrivateRoute.js":"4","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantPage.js":"5","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/RegisterForm.jsx":"6","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Home.jsx":"7","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantList.js":"8","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/utils/axiosWithAuth.js":"9","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Styles/StyledComponents.js":"10","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Header.jsx":"11","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/UserPage.jsx":"12","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/store/index.js":"13","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/index.js":"14","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/userReducer.js":"15","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/actionTypes.js":"16","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/actions.js":"17","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/plantsReducer.js":"18","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantDataList.jsx":"19","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/data.js":"20"},{"size":429,"mtime":1610078628040,"results":"21","hashOfConfig":"22"},{"size":885,"mtime":1610078628029,"results":"23","hashOfConfig":"22"},{"size":2411,"mtime":1610337477416,"results":"24","hashOfConfig":"22"},{"size":426,"mtime":1610084207510,"results":"25","hashOfConfig":"22"},{"size":764,"mtime":1610337477420,"results":"26","hashOfConfig":"22"},{"size":5044,"mtime":1610337477421,"results":"27","hashOfConfig":"22"},{"size":2525,"mtime":1610337477415,"results":"28","hashOfConfig":"22"},{"size":2814,"mtime":1610337477419,"results":"29","hashOfConfig":"22"},{"size":255,"mtime":1610337477431,"results":"30","hashOfConfig":"22"},{"size":1309,"mtime":1610337477421,"results":"31","hashOfConfig":"22"},{"size":603,"mtime":1610337477414,"results":"32","hashOfConfig":"22"},{"size":7345,"mtime":1610337477422,"results":"33","hashOfConfig":"22"},{"size":214,"mtime":1610078628055,"results":"34","hashOfConfig":"22"},{"size":243,"mtime":1610337477428,"results":"35","hashOfConfig":"22"},{"size":650,"mtime":1610337477430,"results":"36","hashOfConfig":"22"},{"size":399,"mtime":1610337477425,"results":"37","hashOfConfig":"22"},{"size":1674,"mtime":1610337477426,"results":"38","hashOfConfig":"22"},{"size":764,"mtime":1610337477429,"results":"39","hashOfConfig":"22"},{"size":3125,"mtime":1610337477418,"results":"40","hashOfConfig":"22"},{"size":465,"mtime":1610337477423,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dnemtr",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/index.js",[],["88","89"],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/App.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Login.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PrivateRoute.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantPage.js",["90","91"],"import React, { useState, useEffect } from \"react\";\nimport {axiosWithAuth} from \"../utils/axiosWithAuth\";\nimport PlantList from \"./PlantList\";\n\nconst PlantPage = () => {\n    const [plantList, setPlantList] = useState([]);\n\n    useEffect(() => {\n        axiosWithAuth().get('/api/plants')\n        .then(res => {\n            console.log(\"This is the initial plant list from API\", res.data)\n            setPlantList(res.data)\n        })\n        .catch(err => console.log(err.response));\n    }, []);\n\n    return (\n        <>\n         <PlantList plants={plantList} updatePlants={setPlantList} />\n        </>\n    )\n}\n\nexport default PlantPage;","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/RegisterForm.jsx",["92"],"import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { StyledForm, StyledTextInput } from './Styles/StyledComponents';\nimport plantImg from '../utils/waterplants.jpg';\nimport Header from './Header';\nimport { useDispatch } from 'react-redux';\nimport { setIsLoggedOn } from '../redux/actions';\n\nexport default function RegisterForm() {\n  //states\n  const [formState, setFormState] = useState({\n    username: '',\n    phonenumber: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    phonenumber: '',\n    password: '',\n  });\n\n  const [subBtn, setSubBtn] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const schema = yup.object().shape({\n    username: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(4, 'Username must be at lease 4 characters long')\n      .max(20, 'Username cannot exceed 20 characters'),\n\n    phonenumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n\n    password: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(6, 'Username must be at lease 6 characters long')\n      .max(12, 'Password cannot exceed 20 characters'),\n  });\n\n  const validation = (event) => {\n    yup\n      .reach(schema, event.target.name)\n      .validate(event.target.value)\n      .then(() => {\n        setErrors({ ...errors, [event.target.name]: '' });\n      })\n      .catch((err) => {\n        setErrors({ ...errors, [event.target.name]: err.errors[0] });\n      });\n  };\n\n  useEffect(() => {\n    schema.isValid(formState).then((valid) => {\n      setSubBtn(!valid);\n    });\n  }, [formState]);\n\n  const inputChange = (event) => {\n    const data = {\n      ...formState,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value,\n    };\n    validation(event);\n    setFormState(data);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    axiosWithAuth()\n      .post('https://plant-tender.herokuapp.com/api/auth/register', formState)\n      .then((res) => {\n        console.log(res);\n        window.localStorage.setItem('token', res.data.token);\n        setFormState({\n          username: '',\n          phonenumber: '',\n          password: '',\n        });\n        dispatch(setIsLoggedOn());\n        history.push('/plants');\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <section className=\"form-container\">\n        <StyledForm>\n          <form onSubmit={submitForm}>\n            <div>\n              <h1>Water My Plants</h1>\n              <img src={plantImg} alt=\"registerImage\" />\n            </div>\n            <div className=\"user-name\">\n              <h3>Enter your Username</h3>\n              <StyledTextInput>\n                <label htmlFor=\"name\">\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    id=\"username\"\n                    value={formState.username}\n                    onChange={inputChange}\n                  />\n                </label>\n              </StyledTextInput>\n              <p>{errors.username}</p>\n            </div>\n            <div className=\"user-number\">\n              <h3>Enter your Phonenumber</h3>\n              <label>\n                <input\n                  type=\"text\"\n                  name=\"phonenumber\"\n                  placeholder=\"xxx-xxx-xxxx\"\n                  id=\"phonenumber\"\n                  value={formState.phonenumber}\n                  onChange={inputChange}\n                />\n              </label>\n              <p>{errors.phonenumber}</p>\n            </div>\n            <div className=\"user-password\">\n              <h3>Enter a Password</h3>\n              <label>\n                <input\n                  type=\"text\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  id=\"password\"\n                  value={formState.password}\n                  onChange={inputChange}\n                />\n              </label>\n              <p>{errors.password}</p>\n            </div>\n            <button disabled={subBtn} type=\"submitBtn\">\n              Register\n            </button>\n          </form>\n        </StyledForm>\n      </section>\n    </div>\n  );\n}\n","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Home.jsx",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantList.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/utils/axiosWithAuth.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Styles/StyledComponents.js",["93"],"import styled from 'styled-components';\n\nconst StyledTextInput = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  margin-bottom: 0.5em;\n\n  input {\n    padding: 5px;\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n`;\n\nconst StyledButton = styled.button`\n  border: none;\n  background-color: #227744;\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 2px solid black;\n  border-radius: 5px;\n  color: white;\n  font-size: 25px;\n\n  :hover {\n    opacity: 80%;\n  }\n`;\n\nconst StyledForm = styled.div`\n  width: 100%;\n\n  form {\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    flex-basis: 50%;\n    padding: 1.15em;\n    box-shadow: 5px 5px 5px #010101;\n    background-color: white;\n    border: 3px solid black;\n    border-radius: 10%;\n    width: 30%;\n    margin: 0 35% 0 35%;\n    background: rgba(255, 165, 0, 0.73);\n    color: white;\n    font-family: 'Merienda', cursive;\n    text-shadow: 3px 3px 5px black;\n  }\n\n  img {\n    width: 250px;\n    border-radius: 50%;\n  }\n`;\n\nexport { StyledTextInput, StyledButton, StyledForm };\n","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/Header.jsx",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/UserPage.jsx",["94","95","96"],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/store/index.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/index.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/userReducer.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/actionTypes.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/actions.js",["97"],"import { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { LOG_ON, IS_FETCHING, FETCHING_SUCCESS, LOG_OFF } from './actionTypes';\n\nexport const setIsLoggedOn = () => ({\n  type: LOG_ON,\n});\nexport const setIsLoggedOff = () => ({\n  type: LOG_OFF,\n});\nexport const isLoading = () => ({\n  type: IS_FETCHING,\n});\nexport const setUserData = (userData) => ({\n  type: FETCHING_SUCCESS,\n  payload: userData,\n});\nexport const updateUserWithUsername = (dispatch, username) => {\n  dispatch(isLoading());\n  axiosWithAuth()\n    .get('/api/auth/users')\n    .then((res) => {\n      const user = res.data.find((user) => user.username === username);\n      if (user) dispatch(setUserData(user));\n    });\n};\nexport const logoutUser = (dispatch) => {\n  window.localStorage.removeItem('token');\n  dispatch(setIsLoggedOff());\n};\n","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/redux/reducers/plantsReducer.js",[],"/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/components/PlantDataList.jsx",["98","99"],"import React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport plantData from '../data';\nimport { StyledButton } from './Styles/StyledComponents';\nimport { useDispatch } from 'react-redux';\nimport { quickAddPlantInfo, toggleModal } from '../redux/actions';\n\nconst StyledPlantDataList = styled.div`\n  height: 100%;\n\n  .listContainer {\n    display: flex;\n    flex-direction: column;\n    align-item: center;\n    justify-content: space-around;\n    width: 100%;\n    height: 100%;\n\n    .plantListContainer {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-direction: column;\n\n      .listChild {\n        width: 100%;\n        padding: 1em;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        p {\n          font-size: 2rem;\n        }\n      }\n    }\n    nav.pagination {\n      margin: 0 auto;\n    }\n  }\n`;\n\nconst PlantDataList = () => {\n  return (\n    <StyledPlantDataList>\n      {/* Search Plants from data.js */}\n      <List />\n    </StyledPlantDataList>\n  );\n};\n\nexport default PlantDataList;\n\nconst List = () => {\n  const [ListData, setListData] = useState([]);\n  const [Pages, setPages] = useState([]);\n  const dispatch = useDispatch();\n\n  useMemo(() => {\n    setListData(plantData);\n  }, []);\n\n  return (\n    <div className=\"listContainer\">\n      <h2>Plant List</h2>\n      {/* container */}\n      <div className=\"plantListContainer\">\n        {ListData.filter((_, i) => i < 5).map((e, i) => (\n          <div className=\"listChild\">\n            <img\n              src={e.image_url}\n              style={{ width: '100px', height: '100px' }}\n              alt={e.common_name + '_pic'}\n            />\n            <p>{e.common_name}</p>\n            <StyledButton\n              onClick={() => {\n                dispatch(quickAddPlantInfo(e.common_name));\n                dispatch(toggleModal());\n              }}\n            >\n              Quick Add\n            </StyledButton>\n          </div>\n        ))}\n      </div>\n      {/* pagination */}\n      <Pagination className=\"pagination\">\n        <PaginationItem>\n          <PaginationLink first href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink previous href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">1</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">2</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">3</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">4</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">5</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink next href=\"#\" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink last href=\"#\" />\n        </PaginationItem>\n      </Pagination>\n    </div>\n  );\n};\n","/Users/jtamedrano/Lambda/BuildWeekProjects/Plant-Tender/front-end/water-my-plants/src/data.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":34},{"ruleId":"104","severity":1,"message":"108","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":65,"column":6,"nodeType":"111","endLine":65,"endColumn":17,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":61,"column":7,"nodeType":"106","messageId":"107","endLine":61,"endColumn":17},{"ruleId":"104","severity":1,"message":"114","line":6,"column":3,"nodeType":"106","messageId":"107","endLine":6,"endColumn":8},{"ruleId":"104","severity":1,"message":"115","line":111,"column":23,"nodeType":"106","messageId":"107","endLine":111,"endColumn":37},{"ruleId":"109","severity":1,"message":"116","line":186,"column":6,"nodeType":"111","endLine":186,"endColumn":23,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"119","line":57,"column":10,"nodeType":"106","messageId":"107","endLine":57,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":57,"column":17,"nodeType":"106","messageId":"107","endLine":57,"endColumn":25},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'plantsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'schema'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'HeaderText' is assigned a value but never used.","'Input' is defined but never used.","'setModalIsOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newPlant'. Either include it or remove the dependency array. You can also do a functional update 'setNewPlant(n => ...)' if you only need 'newPlant' in the 'setNewPlant' call.",["124"],"'Axios' is defined but never used.","'Pages' is assigned a value but never used.","'setPages' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [formState, schema]",{"range":"129","text":"130"},"Update the dependencies array to be: [newPlant, quickAddSpecies]",{"range":"131","text":"132"},[1914,1925],"[formState, schema]",[4236,4253],"[newPlant, quickAddSpecies]"]