[{"/Users/markhillin/Projects/front-end/water-my-plants/src/index.js":"1","/Users/markhillin/Projects/front-end/water-my-plants/src/App.js":"2","/Users/markhillin/Projects/front-end/water-my-plants/src/components/PrivateRoute.js":"3","/Users/markhillin/Projects/front-end/water-my-plants/src/components/Login.js":"4","/Users/markhillin/Projects/front-end/water-my-plants/src/utils/axiosWithAuth.js":"5","/Users/markhillin/Projects/front-end/water-my-plants/src/components/PlantPage.js":"6","/Users/markhillin/Projects/front-end/water-my-plants/src/components/Home.jsx":"7","/Users/markhillin/Projects/front-end/water-my-plants/src/components/Styles/StyledComponents.js":"8","/Users/markhillin/Projects/front-end/water-my-plants/src/components/Header.jsx":"9","/Users/markhillin/Projects/front-end/water-my-plants/src/components/RegisterForm.jsx":"10","/Users/markhillin/Projects/front-end/water-my-plants/src/components/UserPage.jsx":"11","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/actions.js":"12","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/store/index.js":"13","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/actionTypes.js":"14","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/reducers/index.js":"15","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/reducers/userReducer.js":"16","/Users/markhillin/Projects/front-end/water-my-plants/src/components/PlantList.js":"17"},{"size":429,"mtime":1610071956000,"results":"18","hashOfConfig":"19"},{"size":885,"mtime":1610071956000,"results":"20","hashOfConfig":"19"},{"size":426,"mtime":1610071956000,"results":"21","hashOfConfig":"19"},{"size":2353,"mtime":1610071956000,"results":"22","hashOfConfig":"19"},{"size":267,"mtime":1610071956000,"results":"23","hashOfConfig":"19"},{"size":645,"mtime":1610083785000,"results":"24","hashOfConfig":"19"},{"size":1416,"mtime":1610074906000,"results":"25","hashOfConfig":"19"},{"size":1097,"mtime":1610071956000,"results":"26","hashOfConfig":"19"},{"size":535,"mtime":1610072892000,"results":"27","hashOfConfig":"19"},{"size":4631,"mtime":1610071956000,"results":"28","hashOfConfig":"19"},{"size":3593,"mtime":1610071956000,"results":"29","hashOfConfig":"19"},{"size":811,"mtime":1610071956000,"results":"30","hashOfConfig":"19"},{"size":214,"mtime":1610071956000,"results":"31","hashOfConfig":"19"},{"size":177,"mtime":1610071956000,"results":"32","hashOfConfig":"19"},{"size":172,"mtime":1610071956000,"results":"33","hashOfConfig":"19"},{"size":631,"mtime":1610071956000,"results":"34","hashOfConfig":"19"},{"size":1484,"mtime":1610083895000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"rcmbk0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/markhillin/Projects/front-end/water-my-plants/src/index.js",[],["73","74"],"/Users/markhillin/Projects/front-end/water-my-plants/src/App.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/PrivateRoute.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/Login.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/utils/axiosWithAuth.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/PlantPage.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/Home.jsx",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/Styles/StyledComponents.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/Header.jsx",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/RegisterForm.jsx",["75"],"import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { StyledForm, StyledTextInput } from './Styles/StyledComponents';\nimport plantImg from '../utils/waterplants.jpg';\nimport Header from './Header';\n\nexport default function RegisterForm() {\n  //states\n  const [formState, setFormState] = useState({\n    username: '',\n    phonenumber: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    phonenumber: '',\n    password: '',\n  });\n\n  const [subBtn, setSubBtn] = useState(false);\n\n  const history = useHistory();\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const schema = yup.object().shape({\n    username: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(4, 'Username must be at lease 4 characters long')\n      .max(20, 'Username cannot exceed 20 characters'),\n\n    phonenumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n\n    password: yup\n      .string()\n      .trim()\n      .required('A username is required.')\n      .min(6, 'Username must be at lease 6 characters long')\n      .max(12, 'Password cannot exceed 20 characters'),\n  });\n\n  const validation = (event) => {\n    yup\n      .reach(schema, event.target.name)\n      .validate(event.target.value)\n      .then(() => {\n        setErrors({ ...errors, [event.target.name]: '' });\n      })\n      .catch((err) => {\n        setErrors({ ...errors, [event.target.name]: err.errors[0] });\n      });\n  };\n\n  useEffect(() => {\n    schema.isValid(formState).then((valid) => {\n      setSubBtn(!valid);\n    });\n  }, [formState]);\n\n  const inputChange = (event) => {\n    const data = {\n      ...formState,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value,\n    };\n    validation(event);\n    setFormState(data);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    axiosWithAuth()\n      .post('https://plant-tender.herokuapp.com/api/auth/register', formState)\n      .then((res) => {\n        console.log(res);\n        window.localStorage.setItem('token', res.data.token);\n        setFormState({\n          username: '',\n          phonenumber: '',\n          password: '',\n        });\n        history.push('/plants');\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <section className=\"form-container\">\n        <StyledForm>\n          <form onSubmit={submitForm}>\n            <div>\n              <h1>Water My Plants</h1>\n              <img src={plantImg} alt=\"registerImage\"/>\n            </div>\n            <div className=\"user-name\">\n              <h3>Enter your Username</h3>\n              <StyledTextInput>\n                <label htmlFor=\"name\">\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    id=\"username\"\n                    value={formState.username}\n                    onChange={inputChange}\n                  />\n                </label>\n              </StyledTextInput>\n              <p>{errors.username}</p>\n            </div>\n            <div className=\"user-number\">\n              <h3>Enter your Phonenumber</h3>\n              <label>\n                <input\n                  type=\"text\"\n                  name=\"phonenumber\"\n                  placeholder=\"xxx-xxx-xxxx\"\n                  id=\"phonenumber\"\n                  value={formState.phonenumber}\n                  onChange={inputChange}\n                />\n              </label>\n              <p>{errors.phonenumber}</p>\n            </div>\n            <div className=\"user-password\">\n              <h3>Enter a Password</h3>\n              <label>\n                <input\n                  type=\"text\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  id=\"password\"\n                  value={formState.password}\n                  onChange={inputChange}\n                />\n              </label>\n              <p>{errors.password}</p>\n            </div>\n            <button disabled={subBtn} type=\"submitBtn\">\n              Register\n            </button>\n          </form>\n        </StyledForm>\n      </section>\n    </div>\n  );\n}\n","/Users/markhillin/Projects/front-end/water-my-plants/src/components/UserPage.jsx",["76","77","78","79"],"import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\n\nimport { logoutUser } from '../redux/actions';\nimport PlantPage from './PlantPage';\nimport PlantList from './PlantList';\n\nconst UserPageStyle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1em 2em;\n  height: 100vh;\n\n  .userDashboard {\n    background-color: #dddddd;\n    border-radius: 5px;\n    height: 95%;\n    flex: 1;\n    box-shadow: 0 0 5px black;\n\n    .nav-link {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst NavPanelStyle = styled.nav`\n  background-color: #dddddd;\n  border-radius: 5px;\n  padding: 1em;\n  height: 95%;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 1em;\n  box-shadow: 0 0 5px black;\n\n  .user--icon {\n    padding: 1em;\n    margin-bottom: 5px;\n    box-shadow: 0 0 5px black;\n    border-radius: 50px;\n    background-color: #499e3c;\n    width: 60px;\n    height: 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .user--logout-btn {\n    border: 0;\n    padding: 0.5em;\n    border-radius: 5px;\n    color: white;\n    background-color: #bc0003;\n    font-weight: 600;\n  }\n`;\n\nconst UserPage = () => {\n  const user = useSelector((state) => state.user.userData);\n  const [userIsNotNull, setUserNull] = useState(user !== {});\n  const [activeTab, setActiveTab] = useState('1');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  console.log(user);\n\n  return (\n    <UserPageStyle>\n      {/* menu side bar */}\n      {userIsNotNull && (\n        <>\n          <UserPanel\n            username={user.username}\n            dispatch={dispatch}\n            history={history}\n          />\n          <div className=\"userDashboard\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '1' })}\n                  onClick={() => {\n                    toggle('1');\n                  }}\n                >\n                  My Plants\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '2' })}\n                  onClick={() => {\n                    toggle('2');\n                  }}\n                >\n                  Plant List\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                <PlantPage />\n              </TabPane>\n              <TabPane tabId=\"2\"></TabPane>\n            </TabContent>\n          </div>\n        </>\n      )}\n    </UserPageStyle>\n  );\n};\n\nconst UserPanel = ({ username, dispatch, history }) => {\n  return (\n    <>\n      <NavPanelStyle>\n        <div className=\"user--wrapper\">\n          <div className=\"user--icon\">\n            {username && username.slice(0, 1).toUpperCase()}\n          </div>\n          <div className=\"user--username\">{username}</div>\n        </div>\n        <button\n          className=\"user--logout-btn\"\n          onClick={(e) => {\n            logoutUser(dispatch);\n            history.push('/');\n          }}\n        >\n          Logout\n        </button>\n      </NavPanelStyle>\n    </>\n  );\n};\n\nexport default UserPage;\n","/Users/markhillin/Projects/front-end/water-my-plants/src/redux/actions.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/redux/store/index.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/redux/actionTypes.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/redux/reducers/index.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/redux/reducers/userReducer.js",[],"/Users/markhillin/Projects/front-end/water-my-plants/src/components/PlantList.js",["80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":62,"column":6,"nodeType":"89","endLine":62,"endColumn":17,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":5,"endColumn":6},{"ruleId":"91","severity":1,"message":"95","line":9,"column":3,"nodeType":"93","messageId":"94","endLine":9,"endColumn":6},{"ruleId":"91","severity":1,"message":"96","line":18,"column":8,"nodeType":"93","messageId":"94","endLine":18,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":76,"column":25,"nodeType":"93","messageId":"94","endLine":76,"endColumn":36},{"ruleId":"91","severity":1,"message":"98","line":17,"column":9,"nodeType":"93","messageId":"94","endLine":17,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":21,"column":9,"nodeType":"93","messageId":"94","endLine":21,"endColumn":17},{"ruleId":"91","severity":1,"message":"100","line":33,"column":9,"nodeType":"93","messageId":"94","endLine":33,"endColumn":20},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'schema'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'PlantList' is defined but never used.","'setUserNull' is assigned a value but never used.","'editPlant' is assigned a value but never used.","'saveEdit' is assigned a value but never used.","'deletePlant' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [formState, schema]",{"range":"106","text":"107"},[1781,1792],"[formState, schema]"]